define("validate",["underscore"],function(e){return function(t){if(e.has(t,"Validation")){if(!1===e.isArray(t.Validation))throw{message:"Error: Validation type was not array!"};if(!1===e.every(t.Validation,function(t){return e.isFunction(t)})&&!1===e.isEmpty(t.Validation))throw{message:"Error: Validation element type was not function!"};return e.every(t.Validation,function(e){return e(t.Data)})}}}),define("composeValidation",["underscore"],function(e){return[function(t){if(t.Options&&"object"!=typeof t.Options)throw{message:"Error: The input is not of type object."};if(t.Options&&JSON.stringify(e.difference(Object.keys(t.Options),["Headers","Name","Dependencies","Exports","Content"]))!=JSON.stringify([]))throw{message:"Error: The input is invalid."};return!0},function(t){if(JSON.stringify(e.difference(["Headers","Name","Dependencies","Exports","Content"],Object.keys(t.Object)))!=JSON.stringify([]))throw{message:"Error: The state of the module was invalid."};if("string"!=typeof t.Object.Content)throw{message:"Error: The state content is not valid."};if(t.Object.Name&&"string"!=typeof t.Object.Name)throw{message:"Error: The state name is not of type string."};if(t.Object.Dependencies&&0==Array.isArray(t.Object.Dependencies))throw{message:"Error: The state dependencies is not of type array."};if(t.Object.Exports&&0==Array.isArray(t.Object.Exports))throw{message:"Error: The state exports is not of type array."};if(t.Object.Exports&&null==t.Object.Content.match(/^function\([\s\S]*\)\s*{[\s\S]*}$/i))throw{message:"Error: State has exports but content is not of type function."};return!0}]}),define("compose",["validate","composeValidation"],function(e,t){return function(n){var r=this,i="";return e({Data:{Object:r,Options:n},Validation:t}),Object.assign(r,n),r.Headers&&(i=r.Headers),i+="define(",r.Content&&(r.Name&&(i+='"'+r.Name+'", '),r.Dependencies&&(i+=JSON.stringify(r.Dependencies)+", "),r.Exports&&r.Content.match(/^function\([\s\S]*\)\s*{[\s\S]*}$/i)?(i+="function(",r.Exports.forEach(function(e,t){i+=e,r.Exports.length>1&&t!=r.Exports.length-1&&(i+=",")}),i+=") "+new RegExp(/^function\([\s\S]*\)\s*({[\s\S]*})$/i).exec(r.Content)[1]):i+=r.Content),i+=");"}});